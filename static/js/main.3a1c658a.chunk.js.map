{"version":3,"sources":["component/Dialogs/Dialogs.module.css","component/Users/Users.module.scss","component/Profile/MyPosts/Post/Post.module.css","component/Profile/ProfileInfo/ProfileInfo.module.scss","component/Header/header.module.css","component/Navbar/Navbar.module.css","component/Profile/MyPosts/MyPosts.module.css","component/Music/Music.module.css","component/News/News.module.css","component/Settings/Settings.module.scss","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/navbar-reducer.js","redux/users-reducer.js","redux/redux-store.js","component/Header/header.jsx","component/Navbar/Navbar.jsx","component/Profile/MyPosts/Post/Post.jsx","component/Profile/MyPosts/MyPosts.jsx","component/Profile/MyPosts/MyPosts-container.jsx","component/Profile/ProfileInfo/ProfileInfo.jsx","component/Profile/Profile.jsx","component/Music/Music.jsx","component/News/News.jsx","component/Settings/Settings.jsx","component/Dialogs/DialogItem/DialogItem.jsx","component/Dialogs/Message/Message.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/Dialogs-container.jsx","component/Users/Pagination.jsx","component/Users/Users.jsx","component/Users/UsersContainer.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","PostData","id","message","like","newPostText","profileReducer","state","action","type","newPost","newText","DialogsData","name","MessageData","newMessageText","dialogsReducer","newMessage","Friends","navbarReducer","users","pageSize","totalUsersCount","currentPage","usersReducer","map","u","userId","followed","count","reducers","combineReducers","ProfilePage","DialogsPage","NavbarPage","UsersPage","store","createStore","Header","props","className","s","header","src","alt","Navbar","nav","to","Post","post","MyPosts","Posts","p","NewPostElement","React","createRef","wrapper_post","onChange","text","current","value","updateNewPostText","ref","cols","rows","onClick","AddPost","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","ProfileInfo","profile","ava","Profile","Music","music","News","news","Settings","settings","DialogItem","path","dialog","Message","Dialogs","dialogs","d","messages","m","dialogsItems","messagesItems","placeholder","e","target","updateNewMessageText","sendMessage","DialogsContainer","updateNewMessageTextCreator","useStyles","makeStyles","theme","root","marginTop","spacing","PaginationComponent","classes","pagesCount","Math","ceil","pages","i","push","Pagination","defaultPage","shape","color","onChangePage","onPageChanged","styles","selectedPage","Users","key","photos","small","userphoto","unfollow","follow","content","status","UsersApiComponent","pageNumber","setCurrentPage","axios","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","Component","followAC","unfollowAC","setUsersAC","App","render","UsersContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a1c658a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__y8tne\",\"dialogsItems\":\"Dialogs_dialogsItems__2boNC\",\"messagesItems\":\"Dialogs_messagesItems__14XTq\",\"dialog\":\"Dialogs_dialog__2ALfl\",\"message\":\"Dialogs_message__JO2PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userphoto\":\"Users_userphoto__1rDJj\",\"content\":\"Users_content__JY7x2\",\"selectedPage\":\"Users_selectedPage__-9CLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__28iDt\",\"like\":\"Post_like__2akoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__398L5\",\"profile\":\"ProfileInfo_profile__1PiDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1d4qC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Bmxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_post\":\"MyPosts_wrapper_post__2uP0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__3O5SO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3BMLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3oUvI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\n\nlet initialState = {\n    PostData: [\n        { id: 1, message: 'Hi,how are you?', like: 15 },\n        { id: 2, message: 'It\\'s my first post', like: 33 },\n        { id: 3, message: 'It\\'s my first post', like: 49 },\n        { id: 4, message: 'It\\'s my first post', like: 1 },\n    ],\n    newPostText: \"Hi!\"\n};\n\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                like: 0\n            };\n            return {\n                ...state,\n                PostData: [...state.PostData, newPost],\n                newPostText: ''\n            }\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) =>\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text });\n\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {  \n    DialogsData: [\n        { id: 1, name: 'Andrey' },\n        { id: 2, name: 'Victor' },\n        { id: 3, name: 'Olga' },\n        { id: 4, name: 'Anna' },\n        { id: 5, name: 'Egor' },\n        { id: 6, name: 'Egor' },\n    ],\n    MessageData: [\n        { id: 1, message: 'Hi!' },\n        { id: 2, message: 'How are you?' },\n        { id: 3, message: 'It\\'s fine' },\n       \n    ],\n    newMessageText: \"\"\n};\n\nconst dialogsReducer = (state = initialState , action) => {\n\n    switch(action.type){\n        case UPDATE_NEW_MESSAGE_TEXT:          \n            return {\n                ...state,\n                newMessageText: action.newMessage\n            };\n        case SEND_MESSAGE:\n            let newMessage = state.newMessageText;\n            return {\n                ...state,\n                newMessageText:  '',\n                MessageData: [...state.MessageData,{ id: 7, message: newMessage }]\n            } \n        default:\n            return state;\n    }\n}\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport const updateNewMessageTextCreator = (newMessage) =>\n    ({ type: UPDATE_NEW_MESSAGE_TEXT, newMessage: newMessage });\n\nexport default dialogsReducer;","let initialState = {\n    Friends: [\n        { id: 1, name: 'Andrey' },\n        { id: 2, name: 'Anna' },\n        { id: 3, name: 'Viktor' },\n    ]\n};\n\nconst navbarReducer = (state = initialState, action) => {\n    return state;\n}\n\n\nexport default navbarReducer;","const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\n\n\nlet initialState = {\n    users: [ ],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 3\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true }\n                    }\n                    return u;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE : {\n            return { ...state, currentPage: action.currentPage  }\n        }\n        case SET_TOTAL_USERS_COUNT : {\n            return { ...state, totalUsersCount: action.count }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setTotalUsersCountAC = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\n\nexport default usersReducer;","import {createStore, combineReducers} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport navbarReducer from './navbar-reducer';\nimport usersReducer from \"./users-reducer\";\n\nlet reducers = combineReducers({\n    ProfilePage: profileReducer,\n    DialogsPage: dialogsReducer,\n    NavbarPage: navbarReducer,\n    UsersPage: usersReducer,\n});\n\nlet store = createStore(reducers);\n\nexport default store;","import React from 'react';\nimport s from \"./header.module.css\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img src=\"https://st2.depositphotos.com/5904380/12124/v/950/depositphotos_121244762-stock-illustration-logo-industry-factory.jpg\" alt=\"\" />\n            Welcome\n        </header>\n\n    );\n}\n\n\nexport default Header;  ","import React from 'react';\nimport s from \"./Navbar.module.css\";\nimport { NavLink } from 'react-router-dom';\n// import Friends from './Friends/Friends';\n\nconst Navbar = (props) => {\n    return (\n        <nav className={s.nav}>\n            <ul>\n                <li><NavLink to=\"/Profile\">Profile</NavLink></li>\n                <li><NavLink to=\"/Dialogs\">Messages</NavLink></li>\n                <li><NavLink to=\"/News\">News</NavLink></li>\n                <li><NavLink to=\"/Music\">Music</NavLink></li>\n                <li><NavLink to=\"/Settings\">Settings</NavLink></li>\n                <li><NavLink to=\"/Users\">Users</NavLink></li>\n\n            </ul>\n            {/* <Friends state={props.state.Friends}/> */}\n        </nav>\n\n    );\n}\n\n\nexport default Navbar;  ","import React from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className={s.post}>\n            <img src=\"https://toptos.com.ua/content/images/5/populyarnyy-popsoket-pop-socket-dlya-parnya-dart-veyder-56860954500598_small11.jpg\" alt=\"\" />\n                <div>\n                    {props.message}\n                </div>\n            <div className={s.like}><span>like: </span>{props.like}</div>\n        </div>\n    );\n}\n\n\nexport default Post;  ","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\n\n\nconst MyPosts = (props) => {\n\n    let Posts = props.post.map(p => <Post message={p.message} like={p.like} />)\n\n    let NewPostElement = React.createRef();\n\n    let onAddPost = () => {\n\n        props.AddPost();\n\n    }\n\n    let onPostChange = () => {\n        let text = NewPostElement.current.value;\n        props.updateNewPostText(text);\n    }\n\n    return (\n        <div className={s.wrapper_post}>\n            <h3>My posts</h3>\n            <div>\n                <textarea onChange={onPostChange} ref={NewPostElement} cols=\"60\" rows=\"6\"\n                    value={props.newPostText} />\n                <div><button onClick={onAddPost}>Add post</button></div>\n            </div>\n            {Posts}\n        </div>\n    );\n}\n\nexport default MyPosts;  ","import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        post: state.ProfilePage.PostData,\n        newPostText: state.ProfilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewPostText: (text) => {\n            dispatch(updateNewPostTextActionCreator(text));\n        },\n        AddPost: () => {\n            dispatch(addPostActionCreator());\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\n\n\n\nexport default MyPostsContainer;  ","import React from 'react';\nimport s from \"./ProfileInfo.module.scss\";\n\nconst ProfileInfo = (props) => {\n    return (\n        <div className={s.profile}>\n            <img src=\"https://images.unsplash.com/photo-1520531158340-44015069e78e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjI0MX0&auto=format&fit=crop&w=1438&q=80\" alt=\"\" />\n            <div className={s.ava}>\n                ava + description\n        </div>\n\n        </div>\n\n    );\n}\n\n\nexport default ProfileInfo;  ","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPosts-container'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo />\n            <MyPostsContainer/>\n        </div>\n\n    );\n}\n\n\nexport default Profile;  ","import React from 'react';\nimport s from \"./Music.module.css\";\n\n\nconst Music = (props) => {\n    return (\n        <div className={s.music}>\n            Music\n        </div>\n    );\n}\n\n\nexport default Music;  ","import React from 'react';\nimport s from \"./News.module.css\";\n\n\nconst News = (props) => {\n    return (\n        <div className={s.news}>\n            News\n        </div>\n    );\n}\n\n\nexport default News;  ","import React from 'react';\nimport s from \"./Settings.module.scss\";\n\n\nconst Settings = (props) => {\n    return (\n        <div className={s.settings}>\n            Settings\n        </div>\n    );\n}\n\n\nexport default Settings;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/Dialogs/\" + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message;  ","import React from 'react';\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { updateNewMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\n\n\nconst Dialogs = (props) => {\n\n    let state = props.DialogsPage;\n\n    let dialogs = state.DialogsData.map(d => <DialogItem name={d.name} id={d.id} />)\n\n    let messages = state.MessageData.map(m => <Message message={m.message} />)\n\n    let newMessageText = state.newMessageText;\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n\n    }\n\n    let onAddMessageText = (e) => {\n        let newMessage = e.target.value;\n        props.updateNewMessageText(newMessage)\n        \n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogs}\n            </div>\n            <div className={s.messagesItems}>\n                <textarea placeholder='Enter the message' value={newMessageText} onChange={onAddMessageText} />\n                <button onClick={onSendMessageClick}>Add message</button>\n                {messages}\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;  ","import { updateNewMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return { \n        DialogsPage: state.DialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        },\n        updateNewMessageText: (newMessage) => {\n            dispatch(updateNewMessageTextCreator(newMessage));\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;  ","import React from 'react';\nimport styles from './Users.module.scss'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\nconst PaginationComponent = (props) => {\n   \n      \n    const classes = useStyles();\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div className={classes.root}>\n\n        <Pagination \n        defaultPage={props.currentPage} \n        count={pagesCount} \n        shape=\"rounded\"\n        color=\"primary\"\n        onChangePage={() => {props.onPageChanged()}}\n        />\n\n        {\n        pages.map(p => {\n        return <span className={props.currentPage === p && styles.selectedPage} \n        onClick={(e) => { props.onPageChanged(p); }}>{p}</span>\n        })}\n    \n    </div>\n\n}\n\nexport default PaginationComponent;","import React from 'react';\nimport styles from './Users.module.scss'\nimport PaginationComponent from './Pagination';\n\nconst Users = (props) => {\n    \n   return <>\n    <PaginationComponent totalUsersCount={props.totalUsersCount} \n                pageSize={props.pageSize}\n                currentPage={props.currentPage}\n                onPageChanged={props.onPageChanged}/>\n  \n    {\n       props.users.map(u => <div key={u.id} >\n            <span>\n                <div>\n                    <img src={u.photos.small != null ? u.photos.small : \"https://cs8.pikabu.ru/post_img/2017/01/24/8/1485265069188571085.jpg\"} className={styles.userphoto} />\n                </div>\n                <div>\n                    {\n                        u.followed\n                            ? <button onClick={() => { props.unfollow(u.id) }}> UnFollow</button>\n                            : <button onClick={() => { props.follow(u.id) }}> Follow</button>\n                    }\n                </div>\n            </span>\n            <span>\n                <span className={styles.content}>\n                    <div> {u.name} </div> \n                    <div>{u.status}</div>\n                </span>\n            </span>\n        </div>\n        )\n    }\n</>\n}\n\nexport default Users;","import React from 'react'\nimport {connect} from 'react-redux';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { setUsersAC, unfollowAC, followAC, setCurrentPageAC, setTotalUsersCountAC } from '../../redux/users-reducer';\n\nclass UsersApiComponent extends React.Component {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n            });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n            });\n\n    }\n    render() {\n        return <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        onPageChanged={this.onPageChanged}\n        users={this.props.users}\n        unfollow={this.props.unfollow}\n        follow={this.props.follow}   \n        currentPage={this.props.currentPage}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.UsersPage.users,\n        pageSize: state.UsersPage.pageSize,\n        totalUsersCount: state.UsersPage.totalUsersCount,\n        currentPage: state.UsersPage.currentPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber));\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(UsersApiComponent);","import React from 'react';\nimport './App.scss';\nimport Header from './component/Header/header';\nimport Navbar from './component/Navbar/Navbar';\nimport Profile from './component/Profile/Profile';\nimport Music from './component/Music/Music';\nimport News from './component/News/News';\nimport Settings from './component/Settings/Settings'\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport DialogsContainer from './component/Dialogs/Dialogs-container';\nimport UsersContainer from './component/Users/UsersContainer';\n\n\nconst App = (props) => {\n  \n  return (\n    <BrowserRouter>\n      <div className=\"app-wrapper\">\n        <Header />\n        <Navbar  />\n        <div className=\"app-wrapper-content\">\n          <Route path='/Profile' render={()=> <Profile /> } />\n          <Route path='/Dialogs' render={() => <DialogsContainer />} />\n          <Route path='/Music' render={() => <Music/>} />\n          <Route path='/News' render={() => <News/>} />\n          <Route path='/Users' render={() => <UsersContainer/>} />\n          <Route path='/Settings' render={() =><Settings/>} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n// state={props.state.NavbarPage} ","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store} >\n            <App />\n            </Provider>    \n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}