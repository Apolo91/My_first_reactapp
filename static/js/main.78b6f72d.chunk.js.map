{"version":3,"sources":["component/Dialogs/Dialogs.module.css","component/Users/Users.module.scss","component/Profile/MyPosts/Post/Post.module.css","component/Profile/ProfileInfo/ProfileInfo.module.scss","component/Header/header.module.css","component/Navbar/Navbar.module.css","component/Music/Music.module.css","component/News/News.module.css","component/Settings/Settings.module.scss","component/Profile/MyPosts/MyPosts.module.css","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/navbar-reducer.js","redux/users-reducer.js","redux/redux-store.js","component/Header/header.jsx","component/Navbar/Navbar.jsx","component/Music/Music.jsx","component/News/News.jsx","component/Settings/Settings.jsx","component/Dialogs/DialogItem/DialogItem.jsx","component/Dialogs/Message/Message.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/Dialogs-container.jsx","component/common/Pagination/PaginationComponent.jsx","component/Users/Users.jsx","component/common/preloader/CircularIndeterminate.jsx","component/Users/UsersContainer.jsx","component/Profile/MyPosts/Post/Post.jsx","component/Profile/MyPosts/MyPosts.jsx","component/Profile/MyPosts/MyPosts-container.jsx","component/Profile/ProfileInfo/ProfileInfo.jsx","component/Profile/Profile.jsx","component/Profile/ProfileContainer.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","PostData","id","message","like","newPostText","profile","profileReducer","state","action","type","newPost","newText","DialogsData","name","MessageData","newMessageText","dialogsReducer","newMessage","Friends","navbarReducer","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","u","userId","followed","count","reducers","combineReducers","ProfilePage","DialogsPage","NavbarPage","UsersPage","store","createStore","Header","props","className","s","header","src","alt","Navbar","nav","to","Music","music","News","news","Settings","settings","DialogItem","path","dialog","Message","Dialogs","dialogs","d","messages","m","dialogsItems","messagesItems","placeholder","value","onChange","e","target","updateNewMessageText","onClick","sendMessage","DialogsContainer","connect","dispatch","updateNewMessageTextCreator","useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","PaginationComponent","classes","pagesCount","Math","ceil","Pagination","shape","color","page","showFirstButton","showLastButton","event","onPageChanged","Users","key","photos","small","styles","userphoto","unfollow","follow","content","status","display","marginLeft","CircularIndeterminate","CircularProgress","UsersApiComponent","pageNumber","toogleIsFetching","setCurrentPage","axios","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","React","Component","Post","post","MyPosts","Posts","p","NewPostElement","createRef","wrapper_post","text","current","updateNewPostText","ref","cols","rows","addPost","MyPostsContainer","ProfileInfo","ava","large","Profile","ProfileContainer","setUserProfile","App","render","UsersContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78b6f72d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__y8tne\",\"dialogsItems\":\"Dialogs_dialogsItems__2boNC\",\"messagesItems\":\"Dialogs_messagesItems__14XTq\",\"dialog\":\"Dialogs_dialog__2ALfl\",\"message\":\"Dialogs_message__JO2PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userphoto\":\"Users_userphoto__1rDJj\",\"content\":\"Users_content__JY7x2\",\"selectedPage\":\"Users_selectedPage__-9CLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__28iDt\",\"like\":\"Post_like__2akoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__398L5\",\"profile\":\"ProfileInfo_profile__1PiDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1d4qC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Bmxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__3O5SO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3BMLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3oUvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_post\":\"MyPosts_wrapper_post__2uP0d\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE ';\n\nlet initialState = {\n    PostData: [\n        { id: 1, message: 'Hi,how are you?', like: 15 },\n        { id: 2, message: 'It\\'s my first post', like: 33 },\n        { id: 3, message: 'It\\'s my first post', like: 49 },\n        { id: 4, message: 'It\\'s my first post', like: 1 },\n    ],\n    newPostText: \"Hi!\",\n    profile: null\n};\n\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                like: 0\n            };\n            return {\n                ...state,\n                PostData: [...state.PostData, newPost],\n                newPostText: ''\n            }\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            }}\n        case SET_USER_PROFILE: {\n                return {\n                    ...state,\n                    profile: action.profile\n                }   \n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPost = () => ({ type: ADD_POST });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\nexport const updateNewPostText = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text });\n\n\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {  \n    DialogsData: [\n        { id: 1, name: 'Andrey' },\n        { id: 2, name: 'Victor' },\n        { id: 3, name: 'Olga' },\n        { id: 4, name: 'Anna' },\n        { id: 5, name: 'Egor' },\n        { id: 6, name: 'Egor' },\n    ],\n    MessageData: [\n        { id: 1, message: 'Hi!' },\n        { id: 2, message: 'How are you?' },\n        { id: 3, message: 'It\\'s fine' },\n       \n    ],\n    newMessageText: \"\"\n};\n\nconst dialogsReducer = (state = initialState , action) => {\n\n    switch(action.type){\n        case UPDATE_NEW_MESSAGE_TEXT:          \n            return {\n                ...state,\n                newMessageText: action.newMessage\n            };\n        case SEND_MESSAGE:\n            let newMessage = state.newMessageText;\n            return {\n                ...state,\n                newMessageText:  '',\n                MessageData: [...state.MessageData,{ id: 7, message: newMessage }]\n            } \n        default:\n            return state;\n    }\n}\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport const updateNewMessageTextCreator = (newMessage) =>\n    ({ type: UPDATE_NEW_MESSAGE_TEXT, newMessage: newMessage });\n\nexport default dialogsReducer;","let initialState = {\n    Friends: [\n        { id: 1, name: 'Andrey' },\n        { id: 2, name: 'Anna' },\n        { id: 3, name: 'Viktor' },\n    ]\n};\n\nconst navbarReducer = (state = initialState, action) => {\n    return state;\n}\n\n\nexport default navbarReducer;","const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\n\n\nlet initialState = {\n    users: [ ],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true }\n                    }\n                    return u;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE : {\n            return { ...state, currentPage: action.currentPage  }\n        }\n        case SET_TOTAL_USERS_COUNT : {\n            return { ...state, totalUsersCount: action.count }\n        }\n        case TOOGLE_IS_FETCHING : {\n            return { ...state, isFetching: action.isFetching }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const follow = (userId) => ({ type: FOLLOW, userId });\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\nexport const toogleIsFetching = (isFetching) => ({ type: TOOGLE_IS_FETCHING, isFetching });\n\nexport default usersReducer;","import {createStore, combineReducers} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport navbarReducer from './navbar-reducer';\nimport usersReducer from \"./users-reducer\";\n\nlet reducers = combineReducers({\n    ProfilePage: profileReducer,\n    DialogsPage: dialogsReducer,\n    NavbarPage: navbarReducer,\n    UsersPage: usersReducer,\n});\n\nlet store = createStore(reducers);\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport s from \"./header.module.css\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img src=\"https://st2.depositphotos.com/5904380/12124/v/950/depositphotos_121244762-stock-illustration-logo-industry-factory.jpg\" alt=\"\" />\n            Welcome\n        </header>\n\n    );\n}\n\n\nexport default Header;  ","import React from 'react';\nimport s from \"./Navbar.module.css\";\nimport { NavLink } from 'react-router-dom';\n// import Friends from './Friends/Friends';\n\nconst Navbar = (props) => {\n    return (\n        <nav className={s.nav}>\n            <ul>\n                <li><NavLink to=\"/Profile\">Profile</NavLink></li>\n                <li><NavLink to=\"/Dialogs\">Messages</NavLink></li>\n                <li><NavLink to=\"/News\">News</NavLink></li>\n                <li><NavLink to=\"/Music\">Music</NavLink></li>\n                <li><NavLink to=\"/Settings\">Settings</NavLink></li>\n                <li><NavLink to=\"/Users\">Users</NavLink></li>\n\n            </ul>\n            {/* <Friends state={props.state.Friends}/> */}\n        </nav>\n\n    );\n}\n\n\nexport default Navbar;  ","import React from 'react';\nimport s from \"./Music.module.css\";\n\n\nconst Music = (props) => {\n    return (\n        <div className={s.music}>\n            Music\n        </div>\n    );\n}\n\n\nexport default Music;  ","import React from 'react';\nimport s from \"./News.module.css\";\n\n\nconst News = (props) => {\n    return (\n        <div className={s.news}>\n            News\n        </div>\n    );\n}\n\n\nexport default News;  ","import React from 'react';\nimport s from \"./Settings.module.scss\";\n\n\nconst Settings = (props) => {\n    return (\n        <div className={s.settings}>\n            Settings\n        </div>\n    );\n}\n\n\nexport default Settings;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/Dialogs/\" + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message;  ","import React from 'react';\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { updateNewMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\n\n\nconst Dialogs = (props) => {\n\n    let state = props.DialogsPage;\n\n    let dialogs = state.DialogsData.map(d => <DialogItem name={d.name} id={d.id} />)\n\n    let messages = state.MessageData.map(m => <Message message={m.message} />)\n\n    let newMessageText = state.newMessageText;\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n\n    }\n\n    let onAddMessageText = (e) => {\n        let newMessage = e.target.value;\n        props.updateNewMessageText(newMessage)\n        \n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogs}\n            </div>\n            <div className={s.messagesItems}>\n                <textarea placeholder='Enter the message' value={newMessageText} onChange={onAddMessageText} />\n                <button onClick={onSendMessageClick}>Add message</button>\n                {messages}\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;  ","import { updateNewMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return { \n        DialogsPage: state.DialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        },\n        updateNewMessageText: (newMessage) => {\n            dispatch(updateNewMessageTextCreator(newMessage));\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;  ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n        marginBottom: 20\n      },\n    },\n  }));\n\nconst PaginationComponent = (props) => {\n      \n    const classes = useStyles();\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    \n    \n    const handleChange = (event, value) => {\n      props.onPageChanged(value);\n  };\n    \n    return <div className={classes.root}>\n        <Pagination \n        count={pagesCount} \n        shape=\"rounded\"\n        color=\"primary\"\n        page = {props.currentPage}\n        showFirstButton\n        showLastButton\n        onChange={handleChange}\n        />\n        </div>\n\n}\n\nexport default PaginationComponent;","import React from 'react';\nimport styles from './Users.module.scss'\nimport PaginationComponent from '../common/Pagination/PaginationComponent';\nimport { NavLink } from 'react-router-dom';\n\nconst Users = (props) => {\n    \n   return <>\n    <PaginationComponent totalUsersCount={props.totalUsersCount} \n                pageSize={props.pageSize}\n                currentPage={props.currentPage}\n                onPageChanged={props.onPageChanged}/>\n  \n    {\n       props.users.map(u => <div key={u.id} >\n            <span>\n                <div>\n                    <NavLink to={'/profile/'+ u.id}>\n                <img src={u.photos.small != null ? u.photos.small : \"https://cs8.pikabu.ru/post_img/2017/01/24/8/1485265069188571085.jpg\"} className={styles.userphoto} />\n                </NavLink>\n                </div>\n                <div>\n                {\n                        u.followed\n                            ? <button onClick={() => { props.unfollow(u.id) }}> UnFollow</button>\n                            : <button onClick={() => { props.follow(u.id) }}> Follow</button>\n                }\n                </div>\n            </span>\n            <span>\n                <span className={styles.content}>\n                <div> {u.name} </div> \n                <div> {u.status} </div>\n                </span>\n            </span>\n        </div>\n        )\n    }\n</>\n}\n\nexport default Users;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    marginBottom: 20\n  \n  },\n}));\n\nconst CircularIndeterminate = (props) => {\nconst classes = useStyles();\n      \n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default CircularIndeterminate;\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { setUsers, unfollow, follow, setCurrentPage, setTotalUsersCount,toogleIsFetching } from '../../redux/users-reducer';\nimport CircularIndeterminate from '../common/preloader/CircularIndeterminate';\n\nclass UsersApiComponent extends React.Component {\n\n    componentDidMount() {\n        this.props.toogleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toogleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n            });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.toogleIsFetching(true);\n        this.props.setCurrentPage(pageNumber);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toogleIsFetching(false);\n                this.props.setUsers(response.data.items);\n            });\n\n    }\n    render() {\n        return <>\n        {this.props.isFetching ? <CircularIndeterminate/> : null }\n        <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        onPageChanged={this.onPageChanged}\n        users={this.props.users}\n        unfollow={this.props.unfollow}\n        follow={this.props.follow}   \n        currentPage={this.props.currentPage}\n        />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.UsersPage.users,\n        pageSize: state.UsersPage.pageSize,\n        totalUsersCount: state.UsersPage.totalUsersCount,\n        currentPage: state.UsersPage.currentPage,\n        isFetching: state.UsersPage.isFetching\n    }\n}\n\nexport default connect(mapStateToProps,\n    {   follow, \n        unfollow, \n        setUsers, \n        setCurrentPage, \n        setTotalUsersCount, \n        toogleIsFetching\n    })(UsersApiComponent);","import React from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className={s.post}>\n            <img src=\"https://toptos.com.ua/content/images/5/populyarnyy-popsoket-pop-socket-dlya-parnya-dart-veyder-56860954500598_small11.jpg\" alt=\"\" />\n                <div>\n                    {props.message}\n                </div>\n            <div className={s.like}><span>like: </span>{props.like}</div>\n        </div>\n    );\n}\n\n\nexport default Post;  ","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\n\n\nconst MyPosts = (props) => {\n\n    let Posts = props.post.map(p => <Post message={p.message} like={p.like} />)\n\n    let NewPostElement = React.createRef();\n\n    let onAddPost = () => {\n\n        props.addPost();\n\n    }\n\n    let onPostChange = () => {\n        let text = NewPostElement.current.value;\n        props.updateNewPostText(text);\n    }\n\n    return (\n        <div className={s.wrapper_post}>\n            <h3>My posts</h3>\n            <div>\n                <textarea onChange={onPostChange} ref={NewPostElement} cols=\"60\" rows=\"6\"\n                    value={props.newPostText} />\n                <div><button onClick={onAddPost}>Add post</button></div>\n            </div>\n            {Posts}\n        </div>\n    );\n}\n\nexport default MyPosts;  ","import { addPost, updateNewPostText } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        post: state.ProfilePage.PostData,\n        newPostText: state.ProfilePage.newPostText\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps,{updateNewPostText,addPost})(MyPosts);\n\n\n\nexport default MyPostsContainer;  ","import React from 'react';\nimport s from \"./ProfileInfo.module.scss\";\nimport CircularIndeterminate from '../../common/preloader/CircularIndeterminate';\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile){\n        return <CircularIndeterminate/>\n    }\n\n    return (\n        <div className={s.profile}>\n            <img src=\"https://images.unsplash.com/photo-1520531158340-44015069e78e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjI0MX0&auto=format&fit=crop&w=1438&q=80\" alt=\"\" />\n            <div className={s.ava}>\n                <img src={props.profile.photos.large}/>\n                <div>ava + description</div>  \n        </div>\n\n        </div>\n\n    );\n}\n\n\nexport default ProfileInfo;  ","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPosts-container'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} />\n            <MyPostsContainer/>\n        </div>\n\n    );\n}\n\n\nexport default Profile;  ","import React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from 'react-redux';\nimport * as axios from 'axios';\nimport {setUserProfile} from '../../redux/profile-reducer'\n\nclass ProfileContainer extends React.Component {\n    \n    componentDidMount(){ \n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/2`)\n        .then(response => { \n            this.props.setUserProfile(response.data);\n        });\n        }\n\n    render() {\n        return(\n                <Profile {...this.props} profile={this.props.profile} />            \n        );\n    }\n}\n \n\nlet mapStateToProps = (state) => ({profile : state.ProfilePage.profile});\n\nexport default connect(mapStateToProps,{setUserProfile})(ProfileContainer);  ","import React from 'react';\nimport './App.scss';\nimport Header from './component/Header/header';\nimport Navbar from './component/Navbar/Navbar';\nimport Music from './component/Music/Music';\nimport News from './component/News/News';\nimport Settings from './component/Settings/Settings'\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport DialogsContainer from './component/Dialogs/Dialogs-container';\nimport UsersContainer from './component/Users/UsersContainer';\nimport ProfileContainer from './component/Profile/ProfileContainer';\n\n\nconst App = (props) => {\n  \n  return (\n    <BrowserRouter>\n      <div className=\"app-wrapper\">\n        <Header />\n        <Navbar  />\n        <div className=\"app-wrapper-content\">\n          <Route path='/Profile' render={()=> <ProfileContainer /> } />\n          <Route path='/Dialogs' render={() => <DialogsContainer />} />\n          <Route path='/Music' render={() => <Music/>} />\n          <Route path='/News' render={() => <News/>} />\n          <Route path='/Users' render={() => <UsersContainer/>} />\n          <Route path='/Settings' render={() =><Settings/>} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n// state={props.state.NavbarPage} ","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store} >\n            <App />\n            </Provider>    \n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}