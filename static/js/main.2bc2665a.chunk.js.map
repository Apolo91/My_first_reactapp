{"version":3,"sources":["component/Dialogs/Dialogs.module.css","component/Header/header.module.css","component/Users/Users.module.scss","component/Profile/MyPosts/Post/Post.module.css","component/Navbar/Navbar.module.css","component/Music/Music.module.css","component/News/News.module.css","component/Settings/Settings.module.scss","component/Profile/MyPosts/MyPosts.module.css","component/Profile/ProfileInfo/ProfileInfo.module.scss","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/navbar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","component/Header/header.jsx","component/Header/headerContainer.jsx","component/Navbar/Navbar.jsx","component/Music/Music.jsx","component/News/News.jsx","component/Settings/Settings.jsx","component/Dialogs/DialogItem/DialogItem.jsx","component/Dialogs/Message/Message.jsx","component/Dialogs/Dialogs.jsx","component/Dialogs/Dialogs-container.jsx","component/common/Pagination/PaginationComponent.jsx","api/api.js","component/Users/Users.jsx","component/common/preloader/CircularIndeterminate.jsx","component/Users/UsersContainer.jsx","component/Profile/MyPosts/Post/Post.jsx","component/Profile/MyPosts/MyPosts.jsx","component/Profile/MyPosts/MyPosts-container.jsx","component/Profile/ProfileInfo/ProfileInfo.jsx","component/Profile/Profile.jsx","component/Profile/ProfileContainer.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","PostData","id","message","like","newPostText","profile","profileReducer","state","action","type","newPost","newText","DialogsData","name","MessageData","newMessageText","dialogsReducer","newMessage","Friends","navbarReducer","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","count","filter","email","login","isAuth","authReducer","data","reducers","combineReducers","ProfilePage","DialogsPage","NavbarPage","UsersPage","auth","store","createStore","Header","props","className","s","header","src","alt","loginBlock","to","HeaderContainer","axios","withCredentials","then","response","resultCode","setAuthUserData","this","React","Component","connect","Navbar","nav","Music","music","News","news","Settings","settings","DialogItem","path","dialog","Message","Dialogs","dialogs","d","messages","m","dialogsItems","messagesItems","placeholder","value","onChange","e","target","updateNewMessageText","onClick","sendMessage","DialogsContainer","dispatch","updateNewMessageTextCreator","useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","PaginationComponent","classes","pagesCount","Math","ceil","Pagination","shape","color","page","showFirstButton","showLastButton","event","onPageChanged","instance","baseURL","process","headers","usersAPI","getUsers","get","Users","key","photos","small","styles","userphoto","disabled","some","toogleFollowingProgress","delete","unfollow","post","follow","content","status","display","marginLeft","CircularIndeterminate","CircularProgress","UsersApiComponent","pageNumber","toogleIsFetching","setCurrentPage","setUsers","items","setTotalUsersCount","totalCount","Post","MyPosts","Posts","p","NewPostElement","createRef","wrapper_post","text","current","updateNewPostText","ref","cols","rows","addPost","MyPostsContainer","ProfileInfo","avatar","ava","fullName","aboutMe","Profile","ProfileContainer","params","setUserProfile","WithUrlDataContainerComponent","withRouter","App","render","UsersContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bc2665a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__y8tne\",\"dialogsItems\":\"Dialogs_dialogsItems__2boNC\",\"messagesItems\":\"Dialogs_messagesItems__14XTq\",\"dialog\":\"Dialogs_dialog__2ALfl\",\"message\":\"Dialogs_message__JO2PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1d4qC\",\"loginBlock\":\"header_loginBlock__1c3gx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userphoto\":\"Users_userphoto__1rDJj\",\"content\":\"Users_content__JY7x2\",\"selectedPage\":\"Users_selectedPage__-9CLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__28iDt\",\"like\":\"Post_like__2akoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Bmxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__3O5SO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3BMLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3oUvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_post\":\"MyPosts_wrapper_post__2uP0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__398L5\",\"profile\":\"ProfileInfo_profile__1PiDD\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE ';\n\nlet initialState = {\n    PostData: [\n        { id: 1, message: 'Hi,how are you?', like: 15 },\n        { id: 2, message: 'It\\'s my first post', like: 33 },\n        { id: 3, message: 'It\\'s my first post', like: 49 },\n        { id: 4, message: 'It\\'s my first post', like: 1 },\n    ],\n    newPostText: \"Hi!\",\n    profile: null\n};\n\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                like: 0\n            };\n            return {\n                ...state,\n                PostData: [...state.PostData, newPost],\n                newPostText: ''\n            }\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            }}\n        case SET_USER_PROFILE: {\n                return {\n                    ...state,\n                    profile: action.profile\n                }   \n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPost = () => ({ type: ADD_POST });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\nexport const updateNewPostText = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text });\n\n\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {  \n    DialogsData: [\n        { id: 1, name: 'Andrey' },\n        { id: 2, name: 'Victor' },\n        { id: 3, name: 'Olga' },\n        { id: 4, name: 'Anna' },\n        { id: 5, name: 'Egor' },\n        { id: 6, name: 'Egor' },\n    ],\n    MessageData: [\n        { id: 1, message: 'Hi!' },\n        { id: 2, message: 'How are you?' },\n        { id: 3, message: 'It\\'s fine' },\n       \n    ],\n    newMessageText: \"\"\n};\n\nconst dialogsReducer = (state = initialState , action) => {\n\n    switch(action.type){\n        case UPDATE_NEW_MESSAGE_TEXT:          \n            return {\n                ...state,\n                newMessageText: action.newMessage\n            };\n        case SEND_MESSAGE:\n            let newMessage = state.newMessageText;\n            return {\n                ...state,\n                newMessageText:  '',\n                MessageData: [...state.MessageData,{ id: 7, message: newMessage }]\n            } \n        default:\n            return state;\n    }\n}\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport const updateNewMessageTextCreator = (newMessage) =>\n    ({ type: UPDATE_NEW_MESSAGE_TEXT, newMessage: newMessage });\n\nexport default dialogsReducer;","let initialState = {\n    Friends: [\n        { id: 1, name: 'Andrey' },\n        { id: 2, name: 'Anna' },\n        { id: 3, name: 'Viktor' },\n    ]\n};\n\nconst navbarReducer = (state = initialState, action) => {\n    return state;\n}\n\n\nexport default navbarReducer;","const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\n\n\n\nlet initialState = {\n    users: [ ],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true }\n                    }\n                    return u;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE : {\n            return { ...state, currentPage: action.currentPage  }\n        }\n        case SET_TOTAL_USERS_COUNT : {\n            return { ...state, totalUsersCount: action.count }\n        }\n        case TOOGLE_IS_FETCHING : {\n            return { ...state, isFetching: action.isFetching }\n        }\n        case TOOGLE_IS_FOLLOWING_PROGRESS : {\n            return { ...state, \n                followingInProgress: action.isFetching \n               ? [...state.followingInProgress, action.userId ]\n               : state.followingInProgress.filter(id=> id !== action.userId) }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const follow = (userId) => ({ type: FOLLOW, userId });\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\nexport const toogleIsFetching = (isFetching) => ({ type: TOOGLE_IS_FETCHING, isFetching });\nexport const toogleFollowingProgress = (isFetching, userId) => ({ type: TOOGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\n\nexport default usersReducer;","const SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true \n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId,email,login) => ({ type: SET_USER_DATA, data:{userId,email,login}});\n\n\n\nexport default authReducer;","import {createStore, combineReducers} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport navbarReducer from './navbar-reducer';\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\n\nlet reducers = combineReducers({\n    ProfilePage: profileReducer,\n    DialogsPage: dialogsReducer,\n    NavbarPage: navbarReducer,\n    UsersPage: usersReducer,\n    auth:authReducer\n});\n\nlet store = createStore(reducers);\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport s from \"./header.module.css\";\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img src=\"https://st2.depositphotos.com/5904380/12124/v/950/depositphotos_121244762-stock-illustration-logo-industry-factory.jpg\" alt=\"\" />\n            Welcome\n            <div className={s.loginBlock}>\n                { props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>\n                }\n            </div>\n        </header>\n\n    );\n}\n\n\nexport default Header;  ","import React from 'react';\nimport Header from './header';\nimport * as axios from 'axios';\nimport {connect} from 'react-redux';\nimport {setAuthUserData} from '../../redux/auth-reducer'\n\n\nclass HeaderContainer extends React.Component {\n    componentDidMount(){\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,{\n            withCredentials: true\n        })\n            .then(response => {\n            \n               if (response.data.resultCode === 0) {\n                   let {id,email,login} = response.data.data;\n                   this.props.setAuthUserData(id,email,login);\n               }\n            });\n\n    }\n    \n    render() {\n        return <Header {...this.props}/>\n\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login:state.auth.login,\n\n});\n\n\n\nexport default connect( mapStateToProps,{setAuthUserData}) (HeaderContainer);  ","import React from 'react';\nimport s from \"./Navbar.module.css\";\nimport { NavLink } from 'react-router-dom';\n// import Friends from './Friends/Friends';\n\nconst Navbar = (props) => {\n    return (\n        <nav className={s.nav}>\n            <ul>\n                <li><NavLink to=\"/profile\">Profile</NavLink></li>\n                <li><NavLink to=\"/dialogs\">Messages</NavLink></li>\n                <li><NavLink to=\"/news\">News</NavLink></li>\n                <li><NavLink to=\"/music\">Music</NavLink></li>\n                <li><NavLink to=\"/settings\">Settings</NavLink></li>\n                <li><NavLink to=\"/users\">Users</NavLink></li>\n\n            </ul>\n            {/* <Friends state={props.state.Friends}/> */}\n        </nav>\n\n    );\n}\n\n\nexport default Navbar;  ","import React from 'react';\nimport s from \"./Music.module.css\";\n\n\nconst Music = (props) => {\n    return (\n        <div className={s.music}>\n            Music\n        </div>\n    );\n}\n\n\nexport default Music;  ","import React from 'react';\nimport s from \"./News.module.css\";\n\n\nconst News = (props) => {\n    return (\n        <div className={s.news}>\n            News\n        </div>\n    );\n}\n\n\nexport default News;  ","import React from 'react';\nimport s from \"./Settings.module.scss\";\n\n\nconst Settings = (props) => {\n    return (\n        <div className={s.settings}>\n            Settings\n        </div>\n    );\n}\n\n\nexport default Settings;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/Dialogs/\" + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message;  ","import React from 'react';\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\n\n\n\nconst Dialogs = (props) => {\n\n    let state = props.DialogsPage;\n\n    let dialogs = state.DialogsData.map(d => <DialogItem name={d.name} id={d.id} />)\n\n    let messages = state.MessageData.map(m => <Message message={m.message} />)\n\n    let newMessageText = state.newMessageText;\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n\n    }\n\n    let onAddMessageText = (e) => {\n        let newMessage = e.target.value;\n        props.updateNewMessageText(newMessage)\n        \n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogs}\n            </div>\n            <div className={s.messagesItems}>\n                <textarea placeholder='Enter the message' value={newMessageText} onChange={onAddMessageText} />\n                <button onClick={onSendMessageClick}>Add message</button>\n                {messages}\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;  ","import { updateNewMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return { \n        DialogsPage: state.DialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: () => {\n            dispatch(sendMessageCreator());\n        },\n        updateNewMessageText: (newMessage) => {\n            dispatch(updateNewMessageTextCreator(newMessage));\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;  ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n        marginBottom: 20\n      },\n    },\n  }));\n\nconst PaginationComponent = (props) => {\n      \n    const classes = useStyles();\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    \n    \n    const handleChange = (event, value) => {\n      props.onPageChanged(value);\n  };\n    \n    return <div className={classes.root}>\n        <Pagination \n        count={pagesCount} \n        shape=\"rounded\"\n        color=\"primary\"\n        page = {props.currentPage}\n        showFirstButton\n        showLastButton\n        onChange={handleChange}\n        />\n        </div>\n\n}\n\nexport default PaginationComponent;","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials:true,\n    baseURL:process.env.REACT_APP_BASE_URL,   \n    headers:{\n            \"API-KEY\": process.env.REACT_APP_API_KEY\n        }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage=1, pageSize =10){\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {return response.data;});\n    }\n}\n\nexport const followUserRequest = (id) => {\n    return instance.post(`follow/${id}`, {},)\n         .then(response => {return response.data;});\n} \n\nexport const unfollowUserRequest = (id) => {\n    return instance.delete(`follow/${id}`)\n    .then(response => {return response.data;});\n} \n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport styles from './Users.module.scss'\nimport * as axios from 'axios';\nimport PaginationComponent from '../common/Pagination/PaginationComponent';\nimport { NavLink } from 'react-router-dom';\nimport {unfollowUserRequest,followUserRequest} from \"../../api/api\"\n\n\nconst Users = (props) => {\n\n    return <>\n        <PaginationComponent totalUsersCount={props.totalUsersCount}\n            pageSize={props.pageSize}\n            currentPage={props.currentPage}\n            onPageChanged={props.onPageChanged} />\n\n\n        {\n            props.users.map(u => <div key={u.id} >\n\n                <span>\n                    <div>\n                        <NavLink to={'/profile/' + u.id}>\n                            <img src={u.photos.small != null ? u.photos.small : \"https://cs8.pikabu.ru/post_img/2017/01/24/8/1485265069188571085.jpg\"} className={styles.userphoto} />\n                        </NavLink>\n                    </div>\n                    <div>\n                        {\n                            u.followed\n                                ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                    props.toogleFollowingProgress(true, u.id)                                     \n                                    unfollowUserRequest(u.id).then(data => {if (data.resultCode===0){ props.unfollow(u.id)}\n                                });\n                                props.toogleFollowingProgress(false, u.id);\n                                  \n                                 \n                                }}> UnFollow</button>\n\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                    props.toogleFollowingProgress(true, u.id);\n                                    followUserRequest(u.id).then(data =>{ if (data.resultCode === 0){ props.follow(u.id)}\n                                });\n                                    props.toogleFollowingProgress(false, u.id);\n\n                                }}> Follow</button>\n                        }\n                    </div>\n                </span>\n                <span>\n                    <span className={styles.content}>\n                        <div> {u.name} </div>\n                        <div> {u.status} </div>\n                    </span>\n                </span>\n            </div>\n            )\n        }\n    </>\n}\n\nexport default Users;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    marginBottom: 20\n  \n  },\n}));\n\nconst CircularIndeterminate = (props) => {\nconst classes = useStyles();\n      \n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default CircularIndeterminate;\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport Users from './Users';\nimport { setUsers, unfollow, follow, setCurrentPage, setTotalUsersCount,toogleIsFetching,toogleFollowingProgress} from '../../redux/users-reducer';\nimport CircularIndeterminate from '../common/preloader/CircularIndeterminate';\nimport {usersAPI} from \"../../api/api\"\n\n\nclass UsersApiComponent extends React.Component {\n\n    componentDidMount() {\n        this.props.toogleIsFetching(true);\n        usersAPI.getUsers(this.props.currentPage,this.props.pageSize).then ( data => {\n            this.props.toogleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount);\n\n        });\n    }\n       \n\n    onPageChanged = (pageNumber) => {\n        this.props.toogleIsFetching(true);\n        this.props.setCurrentPage(pageNumber);      \n        usersAPI.getUsers(pageNumber,this.props.pageSize).then ( data => {\n            this.props.toogleIsFetching(false);\n            this.props.setUsers(data.items);\n        });\n    }\n    render() {\n        return <>\n        {this.props.isFetching ? <CircularIndeterminate/> : null }\n        <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        onPageChanged={this.onPageChanged}\n        users={this.props.users}\n        unfollow={this.props.unfollow}\n        follow={this.props.follow}   \n        currentPage={this.props.currentPage}\n        toogleFollowingProgress={this.props.toogleFollowingProgress}\n        followingInProgress={this.props.followingInProgress}\n        />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.UsersPage.users,\n        pageSize: state.UsersPage.pageSize,\n        totalUsersCount: state.UsersPage.totalUsersCount,\n        currentPage: state.UsersPage.currentPage,\n        isFetching: state.UsersPage.isFetching,\n        followingInProgress: state.UsersPage.followingInProgress\n\n    }\n}\n\nexport default connect(mapStateToProps,\n    {   follow, \n        unfollow, \n        setUsers, \n        setCurrentPage, \n        setTotalUsersCount, \n        toogleIsFetching,\n        toogleFollowingProgress\n    })(UsersApiComponent);","import React from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className={s.post}>\n            <img src=\"https://toptos.com.ua/content/images/5/populyarnyy-popsoket-pop-socket-dlya-parnya-dart-veyder-56860954500598_small11.jpg\" alt=\"\" />\n                <div>\n                    {props.message}\n                </div>\n            <div className={s.like}><span>like: </span>{props.like}</div>\n        </div>\n    );\n}\n\n\nexport default Post;  ","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\n\n\nconst MyPosts = (props) => {\n\n    let Posts = props.post.map(p => <Post message={p.message} like={p.like} />)\n\n    let NewPostElement = React.createRef();\n\n    let onAddPost = () => {\n\n        props.addPost();\n\n    }\n\n    let onPostChange = () => {\n        let text = NewPostElement.current.value;\n        props.updateNewPostText(text);\n    }\n\n    return (\n        <div className={s.wrapper_post}>\n            <h3>My posts</h3>\n            <div>\n                <textarea onChange={onPostChange} ref={NewPostElement} cols=\"60\" rows=\"6\"\n                    value={props.newPostText} />\n                <div><button onClick={onAddPost}>Add post</button></div>\n            </div>\n            {Posts}\n        </div>\n    );\n}\n\nexport default MyPosts;  ","import { addPost, updateNewPostText } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        post: state.ProfilePage.PostData,\n        newPostText: state.ProfilePage.newPostText\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps,{updateNewPostText,addPost})(MyPosts);\n\n\n\nexport default MyPostsContainer;  ","import React from 'react';\nimport s from \"./ProfileInfo.module.scss\";\nimport CircularIndeterminate from '../../common/preloader/CircularIndeterminate';\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile){\n        return <CircularIndeterminate/>\n    }\n    let avatar = props.profile.photos.small\n    if (!avatar){\n        avatar = \"https://cs8.pikabu.ru/post_img/2017/01/24/8/1485265069188571085.jpg\"\n    }\n    return (\n        <div className={s.ava}>\n             \n            <div>{props.profile.fullName}</div>\n            <img src={avatar}/>\n            <div>{props.profile.aboutMe}</div>  \n       \n\n        </div>\n\n    );\n}\n\n\nexport default ProfileInfo;  ","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPosts-container'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} />\n            <MyPostsContainer/>\n        </div>\n\n    );\n}\n\n\nexport default Profile;  ","import React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from 'react-redux';\nimport * as axios from 'axios';\nimport {withRouter} from \"react-router-dom\";\nimport {setUserProfile} from '../../redux/profile-reducer'\n\nclass ProfileContainer extends React.Component {\n    \n    componentDidMount(){ \n       \n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = 2;\n        };\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId )\n        .then(response => { \n            this.props.setUserProfile(response.data);\n        });\n        }\n        \n\n    render() {\n        return(\n                <Profile {...this.props} profile={this.props.profile} />            \n        );\n    }\n}\n \n\nlet mapStateToProps = (state) => ({profile : state.ProfilePage.profile});\n\n\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\n\nexport default connect(mapStateToProps,{setUserProfile})(WithUrlDataContainerComponent);  ","import React from 'react';\nimport './App.scss';\nimport HeaderContainer from './component/Header/headerContainer';\nimport Navbar from './component/Navbar/Navbar';\nimport Music from './component/Music/Music';\nimport News from './component/News/News';\nimport Settings from './component/Settings/Settings'\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport DialogsContainer from './component/Dialogs/Dialogs-container';\nimport UsersContainer from './component/Users/UsersContainer';\nimport ProfileContainer from './component/Profile/ProfileContainer';\n\n\nconst App = (props) => {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer />\n                <Navbar  />\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile/:userId?' render={()=> <ProfileContainer /> } />\n                    <Route path='/dialogs' render={() => <DialogsContainer />} />\n                    <Route path='/music' render={() => <Music/>} />\n                    <Route path='/news' render={() => <News/>} />\n                    <Route path='/users' render={() => <UsersContainer/>} />\n                    <Route path='/settings' render={() =><Settings/>} />\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n\n\n// state={props.state.NavbarPage} ","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store} >\n                    <App/>\n            </Provider>    \n        </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}