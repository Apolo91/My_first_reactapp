{"version":3,"sources":["component/Dialogs/Dialogs.module.css","component/Navbar/Friends/Friends.module.css","component/Profile/MyPosts/Post/Post.module.css","component/Profile/ProfileInfo/ProfileInfo.module.scss","component/Header/header.module.css","component/Navbar/Navbar.module.css","component/Navbar/Friends/Friend/Friend.module.css","component/Profile/MyPosts/MyPosts.module.css","component/Music/Music.module.css","component/News/News.module.css","component/Settings/Settings.module.scss","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/navbar-reducer.js","redux/state.js","component/Header/header.jsx","component/Navbar/Friends/Friend/Friend.jsx","component/Navbar/Friends/Friends.jsx","component/Navbar/Navbar.jsx","component/Profile/MyPosts/Post/Post.jsx","component/Profile/MyPosts/MyPosts.jsx","component/Profile/ProfileInfo/ProfileInfo.jsx","component/Profile/Profile.jsx","component/Dialogs/DialogItem/DialogItem.jsx","component/Dialogs/Message/Message.jsx","component/Dialogs/Dialogs.jsx","component/Music/Music.jsx","component/News/News.jsx","component/Settings/Settings.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","profileReducer","state","action","type","newPost","id","message","newPostText","like","PostData","push","newText","dialogsReducer","newMessageText","newMessage","MessageData","navbarReducer","store","_state","NavbarPage","Friends","name","ProfilePage","DialogsPage","DialogsData","getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","Header","props","className","s","header","src","alt","Friend","friend","countFriends","map","p","friends","friends_wrap","Navbar","nav","to","Post","post","MyPosts","Posts","NewPostElement","React","createRef","wrapper_post","onChange","text","current","value","updateNewPostTextActionCreator","ref","cols","rows","onClick","ProfileInfo","profile","ava","Profile","DialogItem","path","dialog","Message","Dialogs","dialogs","d","messages","m","dialogsItems","messagesItems","placeholder","e","target","updateNewMessageTextCreator","Music","music","News","news","Settings","settings","App","render","rerenderEntiretree","ReactDOM","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,cAAgB,+BAA+B,OAAS,wBAAwB,QAAU,2B,oBCA5LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,kBCApED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,gBCAnDD,EAAOC,QAAU,CAAC,IAAM,yBAAyB,QAAU,+B,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,IAAM,sB,gBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,aAAe,gC,gBCAjCD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,kHCWTC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,IA0BeC,EAvBQ,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACX,IAJS,WAKL,IAAIC,EAAU,CACVC,GAAI,EACJC,QAASL,EAAMM,YACfC,KAAM,GAIV,OAFAP,EAAMQ,SAASC,KAAKN,GACpBH,EAAMM,YAAc,GACbN,EACX,IAdqB,uBAgBjB,OADAA,EAAMM,YAAcL,EAAOS,QACpBV,EACX,QACI,OAAOA,ICMJW,EArBQ,SAACX,EAAOC,GAC3B,OAAOA,EAAOC,MACV,IALwB,0BAOpB,OADAF,EAAMY,eAAiBX,EAAOY,WACvBb,EACX,IAPa,eAQT,IAAIa,EAAab,EAAMY,eAGvB,OAFAZ,EAAMY,eAAiB,GACvBZ,EAAMc,YAAYL,KAAK,CAAEL,GAAI,EAAGC,QAASQ,IAClCb,EACX,QACI,OAAOA,ICRJe,EANO,SAACf,EAAOC,GAG1B,OAAOD,GCCPgB,EAAQ,CACRC,OAAQ,CACJC,WAAY,CACRC,QAAS,CACL,CAAEf,GAAI,EAAGgB,KAAM,UACf,CAAEhB,GAAI,EAAGgB,KAAM,QACf,CAAEhB,GAAI,EAAGgB,KAAM,YAGvBC,YAAa,CACTb,SAAU,CACN,CAAEJ,GAAI,EAAGC,QAAS,kBAAmBE,KAAM,IAC3C,CAAEH,GAAI,EAAGC,QAAS,qBAAuBE,KAAM,IAC/C,CAAEH,GAAI,EAAGC,QAAS,qBAAuBE,KAAM,IAC/C,CAAEH,GAAI,EAAGC,QAAS,qBAAuBE,KAAM,IAEnDD,YAAa,oBAEjBgB,YAAa,CACTC,YAAa,CACT,CAAEnB,GAAI,EAAGgB,KAAM,UACf,CAAEhB,GAAI,EAAGgB,KAAM,UACf,CAAEhB,GAAI,EAAGgB,KAAM,QACf,CAAEhB,GAAI,EAAGgB,KAAM,QACf,CAAEhB,GAAI,EAAGgB,KAAM,QACf,CAAEhB,GAAI,EAAGgB,KAAM,SAEnBN,YAAa,CACT,CAAEV,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,gBAClB,CAAED,GAAI,EAAGC,QAAS,aAClB,CAAED,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,OAClB,CAAED,GAAI,EAAGC,QAAS,QAEtBO,eAAgB,KAKxBY,SAxCQ,WAyCJ,OAAOC,KAAKR,QAEhBS,gBA3CQ,WA4CJC,QAAQC,IAAI,kBAEhBC,UA9CQ,SA8CEC,GACNL,KAAKC,gBAAkBI,GAG3BC,SAlDQ,SAkDC9B,GAELwB,KAAKR,OAAOI,YAActB,EAAe0B,KAAKR,OAAOI,YAAYpB,GACjEwB,KAAKR,OAAOK,YAAcX,EAAec,KAAKR,OAAOK,YAAYrB,GACjEwB,KAAKR,OAAOC,WAAaH,EAAeU,KAAKR,OAAOC,WAAWjB,GAC/DwB,KAAKC,gBAAgBD,KAAKR,UAKnBD,IACfrB,OAAOqB,MAAQA,E,oECnDAgB,EAXA,SAACC,GACZ,OACI,4BAAQC,UAAWC,IAAEC,QACjB,yBAAKC,IAAI,yHAAyHC,IAAI,KAD1I,Y,0DCOOC,EATA,SAACN,GACZ,OACA,yBAAKC,UAAWC,IAAEK,QACfP,EAAMb,OCcED,EAhBC,SAACc,GACb,IAAIQ,EAAeR,EAAMjC,MAAM0C,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQvB,KAAMuB,EAAEvB,UACxD,OACI,yBAAKc,UAAWC,IAAES,SAAlB,UAIA,yBAAKV,UAAWC,IAAEU,cAEbJ,KCQEK,EAjBA,SAACb,GACZ,OACI,yBAAKC,UAAWC,IAAEY,KACd,4BACI,4BAAI,kBAAC,IAAD,CAASC,GAAG,YAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,SAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,aAAZ,cAER,kBAAC,EAAD,CAAShD,MAAOiC,EAAMjC,MAAMmB,Y,kCCEzB8B,EAbF,SAAChB,GACV,OACI,yBAAKC,UAAWC,IAAEe,MACd,yBAAKb,IAAI,4HAA4HC,IAAI,KACrI,6BACKL,EAAM5B,SAEf,yBAAK6B,UAAWC,IAAE5B,MAAM,wCAAoB0B,EAAM1B,QC2B/C4C,EA/BC,SAAClB,GAEb,IAAImB,EAAQnB,EAAMiB,KAAKR,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMtC,QAASsC,EAAEtC,QAASE,KAAMoC,EAAEpC,UAE9D8C,EAAiBC,IAAMC,YAc3B,OACI,yBAAKrB,UAAWC,IAAEqB,cACd,wCACA,6BACI,8BAAWC,SAVJ,WACf,IAAIC,EAAOL,EAAeM,QAAQC,MAElC3B,EAAMF,STEgC,SAAC2B,GAAD,MACzC,CAAExD,KAxBsB,uBAwBMQ,QAASgD,GSHrBG,CAA+BH,KAOHI,IAAKT,EAAgBU,KAAK,KAAKC,KAAK,IACvEJ,MAAO3B,EAAM3B,cACb,6BAAK,4BAAQ2D,QAlBX,WAEVhC,EAAMF,STQ6B,CAAE7B,KArB5B,eS6BI,cAERkD,I,iBCfEc,EAdK,SAACjC,GACjB,OACI,yBAAKC,UAAWC,IAAEgC,SACd,yBAAK9B,IAAI,wIAAwIC,IAAI,KACrJ,yBAAKJ,UAAWC,IAAEiC,KAAlB,uBCYGC,EAfC,SAACpC,GACb,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CACAiB,KAAMjB,EAAMZ,YAAYb,SACxBF,YAAa2B,EAAMZ,YAAYf,YAE/ByB,SAAUE,EAAMF,a,gBCEbuC,EAVI,SAACrC,GAChB,IAAIsC,EAAO,YAActC,EAAM7B,GAC/B,OACI,yBAAK8B,UAAWC,IAAEqC,QACd,kBAAC,IAAD,CAASxB,GAAIuB,GAAOtC,EAAMb,QCAvBqD,EAJC,SAACxC,GACb,OAAO,yBAAKC,UAAWC,IAAE9B,SAAU4B,EAAM5B,UCoC9BqE,EAlCC,SAACzC,GAEb,IAAIjC,EAAQiC,EAAMjB,MAAMQ,WAAWF,YAE/BqD,EAAU3E,EAAMuB,YAAYmB,KAAI,SAAAkC,GAAC,OAAI,kBAAC,EAAD,CAAYxD,KAAMwD,EAAExD,KAAMhB,GAAIwE,EAAExE,QAErEyE,EAAW7E,EAAMc,YAAY4B,KAAI,SAAAoC,GAAC,OAAI,kBAAC,EAAD,CAASzE,QAASyE,EAAEzE,aAE1DO,EAAiBZ,EAAMY,eAY3B,OACI,yBAAKsB,UAAWC,IAAEwC,SACd,yBAAKzC,UAAWC,IAAE4C,cACbJ,GAEL,yBAAKzC,UAAWC,IAAE6C,eACd,8BAAUC,YAAY,oBAAoBrB,MAAOhD,EAAgB6C,SAXtD,SAACyB,GACpB,IAAIrE,EAAaqE,EAAEC,OAAOvB,MAC1B3B,EAAMjB,MAAMe,SbHuB,SAAClB,GAAD,MACtC,CAAEX,KAtByB,0BAsBMW,WAAYA,GaErBuE,CAA4BvE,OAUzC,4BAAQoD,QAjBK,WACrBhC,EAAMjB,MAAMe,SbEqB,CAAE7B,KAnBtB,mBaiCL,eACC2E,K,iBCtBFQ,EATD,SAACpD,GACX,OACI,yBAAKC,UAAWC,IAAEmD,OAAlB,U,iBCOOC,EATF,SAACtD,GACV,OACI,yBAAKC,UAAWC,IAAEqD,MAAlB,S,iBCOOC,EATE,SAACxD,GACd,OACI,yBAAKC,UAAWC,IAAEuD,UAAlB,a,OC2BOC,EArBH,SAAC1D,GACX,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQlC,MAAOiC,EAAMjC,MAAMkB,aAC3B,yBAAKgB,UAAU,uBACb,kBAAC,IAAD,CAAOqC,KAAK,WAAWqB,OAAQ,kBAAI,kBAAC,EAAD,CACnCvE,YAAaY,EAAMjC,MAAMqB,YACzBU,SAAUE,EAAMF,cAEhB,kBAAC,IAAD,CAAOwC,KAAK,WAAWqB,OAAQ,kBAAM,kBAAC,EAAD,CAAS5E,MAAOiB,EAAMjB,WAC3D,kBAAC,IAAD,CAAOuD,KAAK,SAASqB,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOrB,KAAK,QAAQqB,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOrB,KAAK,YAAYqB,OAAQ,kBAAK,kBAAC,EAAD,aCjB3CC,EAAqB,SAAC7F,GACtB8F,IAASF,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAK5F,MAAOA,EAAOgB,MAAOA,EAAOe,SAAUf,EAAMe,SAASgE,KAAK/E,MACjDgF,SAASC,eAAe,UAIlDJ,EAAmB7E,EAAMQ,YAEzBR,EAAMa,UAAUgE,GpBgHV,kBAAmBK,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.47618daa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__y8tne\",\"dialogsItems\":\"Dialogs_dialogsItems__2boNC\",\"messagesItems\":\"Dialogs_messagesItems__14XTq\",\"dialog\":\"Dialogs_dialog__2ALfl\",\"message\":\"Dialogs_message__JO2PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1aS5W\",\"friends_wrap\":\"Friends_friends_wrap__aCFxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__28iDt\",\"like\":\"Post_like__2akoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__398L5\",\"profile\":\"ProfileInfo_profile__1PiDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1d4qC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Bmxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3Dv2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_post\":\"MyPosts_wrapper_post__2uP0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__3O5SO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3BMLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3oUvI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\n\nconst profileReducer = (state, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                like: 0\n            };\n            state.PostData.push(newPost);\n            state.newPostText = '';\n            return state;\n        case UPDATE_NEW_POST_TEXT:\n            state.newPostText = action.newText;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) =>\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text });\n\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nconst dialogsReducer = (state, action) => {\n    switch(action.type){\n        case UPDATE_NEW_MESSAGE_TEXT:\n            state.newMessageText = action.newMessage;\n            return state;\n        case SEND_MESSAGE:\n            let newMessage = state.newMessageText;\n            state.newMessageText = '';\n            state.MessageData.push({ id: 7, message: newMessage });\n            return state;\n        default:\n            return state;\n    }\n\n}\n\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport const updateNewMessageTextCreator = (newMessage) =>\n    ({ type: UPDATE_NEW_MESSAGE_TEXT, newMessage: newMessage });\n\nexport default dialogsReducer;","const navbarReducer = (state, action) => {\n    \n    \n    return state;\n}\n\nexport default navbarReducer;","import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport navbarReducer from './navbar-reducer';\n\nlet store = {\n    _state: {\n        NavbarPage: {\n            Friends: [\n                { id: 1, name: 'Andrey' },\n                { id: 2, name: 'Anna' },\n                { id: 3, name: 'Viktor' },\n            ]\n        },\n        ProfilePage: {\n            PostData: [\n                { id: 1, message: 'Hi,how are you?', like: 15 },\n                { id: 2, message: 'It\\'s my first post', like: 33 },\n                { id: 3, message: 'It\\'s my first post', like: 49 },\n                { id: 4, message: 'It\\'s my first post', like: 1 },\n            ],\n            newPostText: \"it-kamasutra.com\"\n        },\n        DialogsPage: {\n            DialogsData: [\n                { id: 1, name: 'Andrey' },\n                { id: 2, name: 'Victor' },\n                { id: 3, name: 'Olga' },\n                { id: 4, name: 'Anna' },\n                { id: 5, name: 'Egor' },\n                { id: 6, name: 'Egor' },\n            ],\n            MessageData: [\n                { id: 1, message: 'Hi!' },\n                { id: 2, message: 'How are you?' },\n                { id: 3, message: 'It\\'s fine' },\n                { id: 4, message: 'Yo!' },\n                { id: 5, message: 'Yo!' },\n                { id: 6, message: 'Yo!' },\n            ],\n            newMessageText: \"\"\n\n        }\n\n    },\n    getState() {\n        return this._state;\n    },\n    _callSubscriber() {\n        console.log('state changed');\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n\n        this._state.ProfilePage = profileReducer(this._state.ProfilePage,action);\n        this._state.DialogsPage = dialogsReducer(this._state.DialogsPage,action);\n        this._state.NavbarPage = navbarReducer (this._state.NavbarPage,action);\n        this._callSubscriber(this._state);\n       \n    }\n}\n\nexport default store;\nwindow.store = store;","import React from 'react';\nimport s from \"./header.module.css\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <img src=\"https://st2.depositphotos.com/5904380/12124/v/950/depositphotos_121244762-stock-illustration-logo-industry-factory.jpg\" alt=\"\" />\n            Welcome\n        </header>\n\n    );\n}\n\n\nexport default Header;  ","import React from 'react';\nimport s from \"./Friend.module.css\";\n\nconst Friend = (props) => {\n    return(\n    <div className={s.friend}>\n      {props.name}\n    </div>\n    );\n}\n\n\nexport default Friend;  ","import React from 'react';\nimport s from \"./Friends.module.css\";\nimport Friend from './Friend/Friend'\n\nconst Friends = (props) => {\n    let countFriends = props.state.map(p => <Friend name={p.name} />)\n    return (\n        <div className={s.friends}>\n            \n        Friends            \n\n        <div className={s.friends_wrap} >\n            \n            {countFriends}\n        </div>\n        </div>\n    );\n}\n\n\nexport default Friends;  ","import React from 'react';\nimport s from \"./Navbar.module.css\";\nimport { NavLink } from 'react-router-dom';\nimport Friends from './Friends/Friends';\nconst Navbar = (props) => {\n    return (\n        <nav className={s.nav}>\n            <ul>\n                <li><NavLink to=\"/Profile\">Profile</NavLink></li>\n                <li><NavLink to=\"/Dialogs\">Messages</NavLink></li>\n                <li><NavLink to=\"/News\">News</NavLink></li>\n                <li><NavLink to=\"/Music\">Music</NavLink></li>\n                <li><NavLink to=\"/Settings\">Settings</NavLink></li>\n            </ul>\n            <Friends state={props.state.Friends}/>\n        </nav>\n\n    );\n}\n\n\nexport default Navbar;  ","import React from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className={s.post}>\n            <img src=\"https://toptos.com.ua/content/images/5/populyarnyy-popsoket-pop-socket-dlya-parnya-dart-veyder-56860954500598_small11.jpg\" alt=\"\" />\n                <div>\n                    {props.message}\n                </div>\n            <div className={s.like}><span>like: </span>{props.like}</div>\n        </div>\n    );\n}\n\n\nexport default Post;  ","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\n\n\nconst MyPosts = (props) => {\n\n    let Posts = props.post.map(p => <Post message={p.message} like={p.like} />)\n\n    let NewPostElement = React.createRef();\n\n    let AddPost = () => {\n       \n        props.dispatch(addPostActionCreator());\n        \n    }\n\n    let onPostChange = () => {\n        let text = NewPostElement.current.value;\n        // let action = {type: 'UPDATE-NEW-POST-TEXT', newText: text };\n        props.dispatch(updateNewPostTextActionCreator(text));\n    }\n\n    return (\n        <div className={s.wrapper_post}>\n            <h3>My posts</h3>\n            <div>\n                <textarea  onChange={onPostChange} ref={NewPostElement} cols=\"60\" rows=\"6\" \n                value={props.newPostText} />\n                <div><button onClick={AddPost}>Add post</button></div>\n            </div>\n            {Posts}\n        </div>\n    );\n}\n\nexport default MyPosts;  ","import React from 'react';\nimport s from \"./ProfileInfo.module.scss\";\n\nconst ProfileInfo = (props) => {\n    return (\n        <div className={s.profile}>\n            <img src=\"https://images.unsplash.com/photo-1520531158340-44015069e78e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjI0MX0&auto=format&fit=crop&w=1438&q=80\" alt=\"\" />\n            <div className={s.ava}>\n                ava + description\n        </div>\n\n        </div>\n\n    );\n}\n\n\nexport default ProfileInfo;  ","import React from 'react';\nimport MyPosts from './MyPosts/MyPosts'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <div >\n            <ProfileInfo />\n            <MyPosts \n            post={props.ProfilePage.PostData} \n            newPostText={props.ProfilePage.newPostText}\n            \n            dispatch={props.dispatch} />\n        </div>\n\n    );\n}\n\n\nexport default Profile;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/Dialogs/\" + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;  ","import React from 'react';\nimport s from \"./../Dialogs.module.css\";\n\n\nconst Message = (props) => {\n    return <div className={s.message}>{props.message}</div>\n}\n\nexport default Message;  ","import React from 'react';\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { updateNewMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\n\n\nconst Dialogs = (props) => {\n\n    let state = props.store.getState().DialogsPage;\n\n    let dialogs = state.DialogsData.map(d => <DialogItem name={d.name} id={d.id} />)\n\n    let messages = state.MessageData.map(m => <Message message={m.message} />)\n\n    let newMessageText = state.newMessageText;\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageCreator());\n\n    }\n\n    let onAddMessageText = (e) => {\n        let newMessage = e.target.value;\n        props.store.dispatch(updateNewMessageTextCreator(newMessage));\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogs}\n            </div>\n            <div className={s.messagesItems}>\n                <textarea placeholder='Enter the message' value={newMessageText} onChange={onAddMessageText} />\n                <button onClick={onSendMessageClick}>Add message</button>\n                {messages}\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;  ","import React from 'react';\nimport s from \"./Music.module.css\";\n\n\nconst Music = (props) => {\n    return (\n        <div className={s.music}>\n            Music\n        </div>\n    );\n}\n\n\nexport default Music;  ","import React from 'react';\nimport s from \"./News.module.css\";\n\n\nconst News = (props) => {\n    return (\n        <div className={s.news}>\n            News\n        </div>\n    );\n}\n\n\nexport default News;  ","import React from 'react';\nimport s from \"./Settings.module.scss\";\n\n\nconst Settings = (props) => {\n    return (\n        <div className={s.settings}>\n            Settings\n        </div>\n    );\n}\n\n\nexport default Settings;  ","import React from 'react';\nimport './App.scss';\nimport Header from './component/Header/header';\nimport Navbar from './component/Navbar/Navbar';\nimport Profile from './component/Profile/Profile';\nimport Dialogs from './component/Dialogs/Dialogs';\nimport Music from './component/Music/Music';\nimport News from './component/News/News';\nimport Settings from './component/Settings/Settings'\nimport { Route, BrowserRouter } from 'react-router-dom';\n\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <div className=\"app-wrapper\">\n        <Header />\n        <Navbar state={props.state.NavbarPage} />\n        <div className=\"app-wrapper-content\">\n          <Route path='/Profile' render={()=><Profile \n          ProfilePage={props.state.ProfilePage} \n          dispatch={props.dispatch}/>}\n        />\n          <Route path='/Dialogs' render={() => <Dialogs store={props.store} />} />\n          <Route path='/Music' render={() => <Music/>} />\n          <Route path='/News' render={() => <News/>} />\n          <Route path='/Settings' render={() =><Settings/>} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/state';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nlet rerenderEntiretree = (state) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state} store={store} dispatch={store.dispatch.bind(store)} />\n        </BrowserRouter>, document.getElementById('root'));\n\n}\n\nrerenderEntiretree(store.getState());\n\nstore.subscribe(rerenderEntiretree);\n\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}